# -*- coding: utf-8 -*-
"""algorithm_5/27-6/1.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1VWRTEFDxEHMOcP1hhfgb9idQ_ypa4TUs

# Class 1

## 10818 최소, 최대

N개의 정수가 주어진다. 이때, 최솟값과 최댓값을 구하는 프로그램을 작성하시오.

첫째 줄에 정수의 개수 N (1 ≤ N ≤ 1,000,000)이 주어진다. 둘째 줄에는 N개의 정수를 공백으로 구분해서 주어진다. 모든 정수는 -1,000,000보다 크거나 같고, 1,000,000보다 작거나 같은 정수이다.

첫째 줄에 주어진 정수 N개의 최솟값과 최댓값을 공백으로 구분해 출력한다.
"""

_ = input()

nums = input().split()
nums = [int(x) for x in nums]

print(min(nums), max(nums))

"""숏코드"""

input() # 개수는 필요 없고
*_,=map(int,input().split()) # *_, 이게 개수 상관없이 다 가져오는 거인듯
print(min(_),max(_))

input()
a=list(map(int,input().split())) # 이런식으로 list로 가져와도 된다
print(min(a),max(a))

"""## 2920 음계

다장조는 c d e f g a b C, 총 8개 음으로 이루어져있다. 이 문제에서 8개 음은 다음과 같이 숫자로 바꾸어 표현한다. c는 1로, d는 2로, ..., C를 8로 바꾼다.

1부터 8까지 차례대로 연주한다면 ascending, 8부터 1까지 차례대로 연주한다면 descending, 둘 다 아니라면 mixed 이다.

연주한 순서가 주어졌을 때, 이것이 ascending인지, descending인지, 아니면 mixed인지 판별하는 프로그램을 작성하시오.

첫째 줄에 8개 숫자가 주어진다. 이 숫자는 문제 설명에서 설명한 음이며, 1부터 8까지 숫자가 한 번씩 등장한다.

첫째 줄에 ascending, descending, mixed 중 하나를 출력한다.
"""

num = ''.join(input().split())

if num == '12345678':
    print('ascending')
elif num == '87654321':
    print('descending')
else:
    print('mixed')

"""## 8958 OX 퀴즈

"OOXXOXXOOO"와 같은 OX퀴즈의 결과가 있다. O는 문제를 맞은 것이고, X는 문제를 틀린 것이다. 문제를 맞은 경우 그 문제의 점수는 그 문제까지 연속된 O의 개수가 된다. 예를 들어, 10번 문제의 점수는 3이 된다.

"OOXXOXXOOO"의 점수는 1+2+0+0+1+0+0+1+2+3 = 10점이다.

OX퀴즈의 결과가 주어졌을 때, 점수를 구하는 프로그램을 작성하시오.

첫째 줄에 테스트 케이스의 개수가 주어진다. 각 테스트 케이스는 한 줄로 이루어져 있고, 길이가 0보다 크고 80보다 작은 문자열이 주어진다. 문자열은 O와 X만으로 이루어져 있다.

각 테스트 케이스마다 점수를 출력한다.
"""

N = int(input())

for _ in range(N):

    score = 0

    for b in input().split('X'):   # X를 기준으로 split하는게 포인트!
        cnt = 0
        for c in b:
            for _ in range(len(c)):
                cnt += 1
                score += cnt
    print(score)

"""숏코드"""

for i in range(int(input())):
    print(sum(len(s)*(len(s)+1)//2 for s in input().split('X')))

# 공차가 1인 등차수열의 합 공식을 이용 n(n+1)/2
# int값을 얻기 위해 //2 해준듯, 아래처럼 int를 써도 될듯

for i in range(int(input())):
    print(sum(int(len(s)*(len(s)+1)/2) for s in input().split('X')))

"""## 11720 숫자의 합

N개의 숫자가 공백 없이 쓰여있다. 이 숫자를 모두 합해서 출력하는 프로그램을 작성하시오.

첫째 줄에 숫자의 개수 N (1 ≤ N ≤ 100)이 주어진다. 둘째 줄에 숫자 N개가 공백없이 주어진다.

입력으로 주어진 숫자 N개의 합을 출력한다.
"""

input()

nums = list(input())
result = 0
for num in nums:
    result += int(num)
print(result)

input()

nums = list(input())
nums = [int(x) for x in nums]
print(sum(nums))

input()
nums = [int(x) for x in list(input())]
print(sum(nums))

"""숏코드
- map을 사용하자!!
"""

input()
print(sum(map(int,input())))

a = '12345'
b = map(int, a)
b 
# map이라는 type, sum으로 바로 안에 숫자들을 더할 수 있음!
c = list(map(int, a))
c
# map을 list()를 통해서 바로 list로 반환할 수도 있음

"""## 2475 검증수

컴퓨터를 제조하는 회사인 KOI 전자에서는 제조하는 컴퓨터마다 6자리의 고유번호를 매긴다. 고유번호의 처음 5자리에는 00000부터 99999까지의 수 중 하나가 주어지며 6번째 자리에는 검증수가 들어간다. 검증수는 고유번호의 처음 5자리에 들어가는 5개의 숫자를 각각 제곱한 수의 합을 10으로 나눈 나머지이다.

예를 들어 고유번호의 처음 5자리의 숫자들이 04256이면, 각 숫자를 제곱한 수들의 합 0+16+4+25+36 = 81 을 10으로 나눈 나머지인 1이 검증수이다.

첫째 줄에 고유번호의 처음 5자리의 숫자들이 빈칸을 사이에 두고 하나씩 주어진다.

첫째 줄에 검증수를 출력한다.
"""

nums = list(map(int, input().split()))

nums = [x**2 for x in nums]

print(sum(nums)%10)

"""숏코딩"""

print(sum(int(i)**2 for i in input().split())%10)

"""## 10871 X보다 작은 수

정수 N개로 이루어진 수열 A와 정수 X가 주어진다. 이때, A에서 X보다 작은 수를 모두 출력하는 프로그램을 작성하시오.

첫째 줄에 N과 X가 주어진다. (1 ≤ N, X ≤ 10,000)

둘째 줄에 수열 A를 이루는 정수 N개가 주어진다. 주어지는 정수는 모두 1보다 크거나 같고, 10,000보다 작거나 같은 정수이다.

X보다 작은 수를 입력받은 순서대로 공백으로 구분해 출력한다. X보다 작은 수는 적어도 하나 존재한다.
"""

N, X = map(int, input().split())

nums = list(map(int, input().split()))

for num in nums:
    if num < X :
        print(num)

"""## 10809 알파벳 찾기

알파벳 소문자로만 이루어진 단어 S가 주어진다. 각각의 알파벳에 대해서, 단어에 포함되어 있는 경우에는 처음 등장하는 위치를, 포함되어 있지 않은 경우에는 -1을 출력하는 프로그램을 작성하시오.

첫째 줄에 단어 S가 주어진다. 단어의 길이는 100을 넘지 않으며, 알파벳 소문자로만 이루어져 있다.

각각의 알파벳에 대해서, a가 처음 등장하는 위치, b가 처음 등장하는 위치, ... z가 처음 등장하는 위치를 공백으로 구분해서 출력한다.

만약, 어떤 알파벳이 단어에 포함되어 있지 않다면 -1을 출력한다. 단어의 첫 번째 글자는 0번째 위치이고, 두 번째 글자는 1번째 위치이다.
"""

s = input()

from string import ascii_lowercase  # 영어 소문자 str!

s = input()
a = ascii_lowercase

for b in a:
    if b in s:
        print(s.index(b))
    else:
        print(-1)

s = 'baekjoon'

s.index('a')  # string도 이렇게 index를 찾을 수 있구나!

from string import ascii_lowercase  # 영어 소문자 str!

a = ascii_lowercase
a

"""숏코드"""

a=input()
print(*(map(a.find,map(chr,range(97,123)))))

# a.find, map(chr, range(97, 123))

a = list(map(chr, range(97, 123))) # a-z
s = 'baekjoon'
b = list(map(s.find, map(chr, range(97, 123)))) # map(적용문자열.find, 단어집합) 
b

"""## 3052 나머지

두 자연수 A와 B가 있을 때, A%B는 A를 B로 나눈 나머지 이다. 예를 들어, 7, 14, 27, 38을 3으로 나눈 나머지는 1, 2, 0, 2이다. 

수 10개를 입력받은 뒤, 이를 42로 나눈 나머지를 구한다. 그 다음 서로 다른 값이 몇 개 있는지 출력하는 프로그램을 작성하시오.

첫째 줄부터 열번째 줄 까지 숫자가 한 줄에 하나씩 주어진다. 이 숫자는 1,000보다 작거나 같고, 음이 아닌 정수이다.

첫째 줄에, 42로 나누었을 때, 서로 다른 나머지가 몇 개 있는지 출력한다.
"""

nums = []
for _ in range(10):  # 숫자가 엔터로 구분지어졌을때는 이렇게 받는다!
    nums.append(int(input())%42)

cnt = len(set(nums))
print(cnt)

"""숏코드"""

print(len({int(input())%42 for _ in range(10)}))   # 딕셔너리를 이용?

a = {1, 3, 2, 4, 2, 1, 3} # 딕셔너리도 중복이 제거되므로 이용할 수 있다!
a

"""## 2908 상수

상근이의 동생 상수는 수학을 정말 못한다. 상수는 숫자를 읽는데 문제가 있다. 이렇게 수학을 못하는 상수를 위해서 상근이는 수의 크기를 비교하는 문제를 내주었다. 상근이는 세 자리 수 두 개를 칠판에 써주었다. 그 다음에 크기가 큰 수를 말해보라고 했다.

상수는 수를 다른 사람과 다르게 거꾸로 읽는다. 예를 들어, 734와 893을 칠판에 적었다면, 상수는 이 수를 437과 398로 읽는다. 따라서, 상수는 두 수중 큰 수인 437을 큰 수라고 말할 것이다.

두 수가 주어졌을 때, 상수의 대답을 출력하는 프로그램을 작성하시오.

첫째 줄에 상근이가 칠판에 적은 두 수 A와 B가 주어진다. 두 수는 같지 않은 세 자리 수이며, 0이 포함되어 있지 않다.

첫째 줄에 상수의 대답을 출력한다.
"""

nums = input().split()
nums = [int(x[::-1]) for x in nums]
print(max(nums))

a = '437'

a[::-1]

"""숏코드"""

print(max(input()[::-1].split())) #[::-1]을 input() 바로 뒤에!!
# 어짜피 양수비교라서 숫자로 안바꿔도 됨. 앞자리부터 비교해도 됨(문자열 비교방식)

"""## 2577 숫자의 개수

세 개의 자연수 A, B, C가 주어질 때 A × B × C를 계산한 결과에 0부터 9까지 각각의 숫자가 몇 번씩 쓰였는지를 구하는 프로그램을 작성하시오.

예를 들어 A = 150, B = 266, C = 427 이라면 A × B × C = 150 × 266 × 427 = 17037300 이 되고, 계산한 결과 17037300 에는 0이 3번, 1이 1번, 3이 2번, 7이 2번 쓰였다.

첫째 줄에 A, 둘째 줄에 B, 셋째 줄에 C가 주어진다. A, B, C는 모두 100보다 크거나 같고, 1,000보다 작은 자연수이다.

첫째 줄에는 A × B × C의 결과에 0 이 몇 번 쓰였는지 출력한다. 마찬가지로 둘째 줄부터 열 번째 줄까지 A × B × C의 결과에 1부터 9까지의 숫자가 각각 몇 번 쓰였는지 차례로 한 줄에 하나씩 출력한다.

- list.count(a) : list 안에 a의 개수를 구한다
- str.count(a) : str 안에 a의 개수를 구한다
"""

result = 1
for _ in range(3):
    num = int(input())
    result *= num

result = str(result)

for idx in range(10):
    print(result.count(str(idx)))

a ='17037300'

a.count('0')

a ='17037300'

list(a)
a.count('0')

"""숏코드"""

a,b,c=map(int,open(0)) #open(0) 이 뭐징?
for i in range(10):
  print(str(a*b*c).count(str(i)))

"""## 1546 평균

세준이는 기말고사를 망쳤다. 세준이는 점수를 조작해서 집에 가져가기로 했다. 일단 세준이는 자기 점수 중에 최댓값을 골랐다. 이 값을 M이라고 한다. 그리고 나서 모든 점수를 점수/M*100으로 고쳤다.

예를 들어, 세준이의 최고점이 70이고, 수학점수가 50이었으면 수학점수는 50/70*100이 되어 71.43점이 된다.

세준이의 성적을 위의 방법대로 새로 계산했을 때, 새로운 평균을 구하는 프로그램을 작성하시오.

첫째 줄에 시험 본 과목의 개수 N이 주어진다. 이 값은 1000보다 작거나 같다. 둘째 줄에 세준이의 현재 성적이 주어진다. 이 값은 100보다 작거나 같은 음이 아닌 정수이고, 적어도 하나의 값은 0보다 크다.

첫째 줄에 새로운 평균을 출력한다. 실제 정답과 출력값의 절대오차 또는 상대오차가 10-2 이하이면 정답이다.
"""

N = int(input())
scores = list(map(int, input().split()))
new_scores = [x*100/max(scores) for x in scores]
print(sum(new_scores)/N)

"""숏코드"""

input()
scores = list(map(int, input().split()))
print(100*sum(scores)/max(scores)/len(scores)) # 분모가 동일하니 sum으로 해줘도 된다

"""## 1157 단어공부

알파벳 대소문자로 된 단어가 주어지면, 이 단어에서 가장 많이 사용된 알파벳이 무엇인지 알아내는 프로그램을 작성하시오. 단, 대문자와 소문자를 구분하지 않는다.

첫째 줄에 알파벳 대소문자로 이루어진 단어가 주어진다. 주어지는 단어의 길이는 1,000,000을 넘지 않는다.

첫째 줄에 이 단어에서 가장 많이 사용된 알파벳을 대문자로 출력한다. 단, 가장 많이 사용된 알파벳이 여러 개 존재하는 경우에는 ?를 출력한다.
"""

s = input().upper()
nums={}

for word in set(s):
    num = s.count(word)
    nums[word] = num

keys = []
for key, value in nums.items():
    if value == max(nums.values()):
        keys.append(key)

if len(keys) > 1:
    print('?')
else:
    print(keys[0])

"""숏코드
- k라는 값을 for 문 안에서 갱신해가면서(count를 이용해서, 전 값보다 클때만 갱신!) 진행
"""

S=input().upper()

T,k = set(S), 0

for t in T:
    if S.count(t)>k:
        k,a=S.count(t),t
    elif S.count(t)==k:
        a='?'
print(a)

"""# Class 2

## 1085 직사각형에서 탈출

한수는 지금 (x, y)에 있다. 직사각형은 각 변이 좌표축에 평행하고, 왼쪽 아래 꼭짓점은 (0, 0), 오른쪽 위 꼭짓점은 (w, h)에 있다. 직사각형의 경계선까지 가는 거리의 최솟값을 구하는 프로그램을 작성하시오.

첫째 줄에 x, y, w, h가 주어진다.

첫째 줄에 문제의 정답을 출력한다.
"""

